<Window x:Class="View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        xmlns:view="clr-namespace:View"
        mc:Ignorable="d"
        Background="{DynamicResource TimberWolfBrush}"
        Height="500"
        ResizeMode="CanResizeWithGrip"
        SnapsToDevicePixels="True"
        Title="Fantasy Name Generator"
        Width="667">

    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <FontFamily x:Key="Raleway">pack://application:,,,/View;component/Resources/Fonts/#Raleway</FontFamily>

        <Brush x:Key="BitterBrush">#7F8271</Brush>
        <Brush x:Key="BlackOliveBrush">#373833</Brush>
        <Brush x:Key="FuscousGrayBrush">#585a4e</Brush>
        <Brush x:Key="LightSlateGrayBrush">#7c8999</Brush>
        <Brush x:Key="NiagaraBrush">#9fafc4</Brush>
        <Brush x:Key="SilverBrush">#C9C9C9</Brush>
        <Brush x:Key="StoneGreyBrush">#878a7d</Brush>
        <Brush x:Key="TimberWolfBrush">#dedfda</Brush>
        <Brush x:Key="WhiteSmokeBrush">#f5f5f5</Brush>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily"
                    Value="{StaticResource Raleway}" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
            <Setter Property="Margin"
                    Value="10,0" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="AllowDrop"
                    Value="true" />
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="Border.CornerRadius"
                    Value="2" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource BlackOliveBrush}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Cursor"
                    Value="IBeam" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="Margin"
                    Value="10" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Padding"
                    Value="1.5" />
            <Setter Property="TextBlock.FontFamily"
                    Value="{DynamicResource Raleway}" />
            <Setter Property="Validation.ErrorTemplate"
                    Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}"
                                Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          TextBlock.FontFamily="{DynamicResource Raleway}"
                                          TextBlock.FontSize="{TemplateBinding FontSize}"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource NiagaraBrush}" />
                </Trigger>
                <Trigger Property="IsFocused"
                         Value="True">
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource NiagaraBrush}" />
                </Trigger>
                <Trigger Property="Validation.HasError"
                         Value="True">
                    <Setter Property="BorderBrush"
                            Value="IndianRed" />
                    <Setter Property="Border.CornerRadius"
                            Value="2" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="{DynamicResource BlackOliveBrush}" />
            <Setter Property="Border.CornerRadius"
                    Value="2" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="TextBlock.FontFamily"
                    Value="{DynamicResource Raleway}" />
            <Setter Property="TextBlock.Foreground"
                    Value="White" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="{TemplateBinding Border.CornerRadius}"
                                    Margin="{TemplateBinding Margin}"
                                    Padding="{TemplateBinding Padding}" />
                            <ContentPresenter x:Name="Text"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="{DynamicResource NiagaraBrush}" />
                    <Setter Property="TextBlock.Foreground"
                            Value="Black" />
                </Trigger>
                <Trigger Property="IsFocused"
                         Value="True">
                    <Setter Property="Background"
                            Value="{DynamicResource LightSlateGrayBrush}" />
                    <Setter Property="TextBlock.Foreground"
                            Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Background"
                            Value="{DynamicResource BitterBrush}" />
                    <Setter Property="TextBlock.Foreground"
                            Value="{DynamicResource SilverBrush}" />
                </Trigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=LengthTextBox}"
                             Value="True">
                    <Setter Property="IsEnabled"
                            Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=MaxVovelInRowTextBox}"
                             Value="True">
                    <Setter Property="IsEnabled"
                            Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=MaxConsonantInRowTextBox}"
                             Value="True">
                    <Setter Property="IsEnabled"
                            Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton"
                         TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        Background="{DynamicResource BlackOliveBrush}"
                        BorderBrush="{DynamicResource BlackOliveBrush}"
                        BorderThickness="1"
                        CornerRadius="2" />
                <Border Grid.Column="0"
                        Background="White"
                        Margin="1"
                        CornerRadius="2,0,0,2" />
                <Path x:Name="Arrow"
                      Grid.Column="1"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      Fill="{DynamicResource StoneGreyBrush}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="Arrow"
                            Property="Fill"
                            Value="{DynamicResource SilverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="Arrow"
                            Property="Fill"
                            Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter TargetName="Border"
                            Property="Background"
                            Value="{DynamicResource SilverBrush}" />
                    <Setter TargetName="Border"
                            Property="BorderBrush"
                            Value="{DynamicResource SilverBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox"
                         TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
                    Background="{TemplateBinding Background}"
                    Focusable="False"
                    VerticalAlignment="Center" />
        </ControlTemplate>

        <Style x:Key="FocusVisualStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderBrush="{DynamicResource NiagaraBrush}"
                                Border.CornerRadius="2"
                                BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Focusable"
                    Value="True" />
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisualStyle}" />
            <Setter Property="FontFamily"
                    Value="{StaticResource Raleway}" />
            <Setter Property="Margin"
                    Value="10" />
            <Setter Property="MinHeight"
                    Value="20" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Padding"
                    Value="3,3,23,3" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
                    Value="True" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="VirtualizingPanel.IsVirtualizing"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButton}"
                                          ClickMode="Press"
                                          Focusable="false"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,
              RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter x:Name="ContentSite"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              HorizontalAlignment="Left"
                                              IsHitTestVisible="False"
                                              Margin="5,2,23,2"
                                              VerticalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     Background="Transparent"
                                     HorizontalAlignment="Left"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Margin="{TemplateBinding Padding}"
                                     VerticalAlignment="Bottom"
                                     Visibility="Hidden" />
                            <Popup x:Name="Popup"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom">
                                <Grid x:Name="DropDown"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      MinWidth="{TemplateBinding ActualWidth}">
                                    <Border x:Name="DropDownBorder"
                                        Background="White"
                                        BorderBrush="{DynamicResource BlackOliveBrush}"
                                        BorderThickness="1" />
                                    <ScrollViewer Focusable="False"
                                                  Margin="4">
                                        <VirtualizingStackPanel IsItemsHost="True"
                                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                                     Value="false">
                                <Setter TargetName="DropDownBorder"
                                        Property="MinHeight"
                                        Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"
                                     Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="2" />
                            </Trigger>
                            <Trigger Property="IsEditable"
                                     Value="True">
                                <Setter Property="Visibility"
                                        TargetName="PART_EditableTextBox"
                                        Value="Visible" />
                                <Setter Property="Visibility"
                                        TargetName="ContentSite"
                                        Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource FuscousGrayBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
                                Background="Transparent"
                                Padding="2">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="{DynamicResource StoneGreyBrush}"
                                        TargetName="Border" />
                                <Setter Property="TextBlock.Foreground"
                                        TargetName="Border"
                                        Value="White" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="{DynamicResource NiagaraBrush}"
                                        TargetName="Border" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>

        <Grid Margin="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.3*" />
                <ColumnDefinition Width="0.5*" />
                <ColumnDefinition Width="0.3*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Text="Язык" />

                <ComboBox Grid.Row="1"
                          ItemsSource="{Binding Languages}"
                          IsEnabled="False"
                          SelectedIndex="0" />

                <TextBlock Grid.Row="2"
                           Text="Частота букв" />

                <ComboBox Grid.Row="3"
                          ItemsSource="{Binding LetterFrequencyTypes}"
                          IsEnabled="False"
                          SelectedIndex="0" />

                <TextBlock Grid.Row="4"
                           Text="Окончания" />

                <ComboBox Grid.Row="5"
                          ItemsSource="{Binding EndingsTypes}"
                          IsEnabled="False"
                          SelectedIndex="0" />

                <TextBlock Grid.Row="6"
                           Text="Двойные согласные" />

                <ComboBox Grid.Row="7"
                          ItemsSource="{Binding DoubleConsonantRequirements}"
                          DisplayMemberPath="RequirementName"
                          SelectedIndex="0"
                          SelectedItem="{Binding DoubleConsonantRequirement, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}" />

                <TextBlock Grid.Row="8"
                           Text="Двойные гласные" />

                <ComboBox Grid.Row="9"
                          ItemsSource="{Binding DoubleVowelRequirements}"
                          DisplayMemberPath="RequirementName"
                          SelectedIndex="0"
                          SelectedItem="{Binding DoubleVowelRequirement, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}" />

                <TextBlock Grid.Row="10"
                           Text="Max согласных подряд" />

                <TextBox x:Name="MaxConsonantInRowTextBox"
                         Grid.Row="11"
                         MaxLength="1">
                    <i:Interaction.Behaviors>
                        <view:TextBoxNumberValidationBehavior />
                    </i:Interaction.Behaviors>
                    <TextBox.Resources>
                        <view:IntToStringConventer x:Key="IntToStringConventer" />
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="MaxConsonantInRow"
                                 Converter="{StaticResource IntToStringConventer}"
                                 Mode="TwoWay"
                                 NotifyOnValidationError="True"
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 ValidatesOnNotifyDataErrors="True">
                            <Binding.ValidationRules>
                                <view:IntValidationRule ValidationType="{x:Type system:Int32}"
                                                        ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Grid.Row="12"
                           Text="Max гласных подряд" />

                <TextBox x:Name="MaxVovelInRowTextBox"
                         Grid.Row="13"
                         MaxLength="1">
                    <i:Interaction.Behaviors>
                        <view:TextBoxNumberValidationBehavior />
                    </i:Interaction.Behaviors>
                    <TextBox.Resources>
                        <view:IntToStringConventer x:Key="IntToStringConventer" />
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="MaxVowelInRow"
                                 Converter="{StaticResource IntToStringConventer}"
                                 Mode="TwoWay"
                                 NotifyOnValidationError="True"
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 ValidatesOnNotifyDataErrors="True">
                            <Binding.ValidationRules>
                                <view:IntValidationRule ValidationType="{x:Type system:Int32}"
                                                        ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <TextBox Grid.Row="0"
                         Grid.Column="0"
                         Grid.ColumnSpan="3"
                         Text="{Binding Names}"
                         FontSize="20"
                         HorizontalContentAlignment="Center"
                         IsReadOnly="True" Cursor="IBeam" />

                <Button Grid.Row="1"
                        Grid.Column="1"
                        Command="{Binding GenerateCommand}"
                        Content="СГЕНЕРИРОВАТЬ"
                        HorizontalAlignment="Center"
                        Padding="60,11"
                        VerticalAlignment="Center" />
            </Grid>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Text="Количество букв в корне" />

                <TextBox x:Name="LengthTextBox"
                         Grid.Row="1"
                         MaxLength="2" Cursor="IBeam">
                    <i:Interaction.Behaviors>
                        <view:TextBoxNumberValidationBehavior />
                    </i:Interaction.Behaviors>
                    <TextBox.Resources>
                        <view:IntToStringConventer x:Key="IntToStringConventer" />
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Path="Length"
                                 Converter="{StaticResource IntToStringConventer}"
                                 Mode="TwoWay"
                                 NotifyOnValidationError="True"
                                 UpdateSourceTrigger="PropertyChanged"
                                 ValidatesOnDataErrors="True"
                                 ValidatesOnNotifyDataErrors="True">
                            <Binding.ValidationRules>
                                <view:IntValidationRule ValidationType="{x:Type system:Int32}"
                                                        ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBlock Grid.Row="2"
                           Text="Тип окончания" />

                <ComboBox Grid.Row="3"
                          DisplayMemberPath="EndingTypeName"
                          IsSynchronizedWithCurrentItem="True"
                          ItemsSource="{Binding EndingTypeRequirements}"
                          SelectedIndex="0"
                          SelectedItem="{Binding SelectedSexType, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}" />
            </Grid>
        </Grid>
    </Grid>
</Window>